/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define extra_layer 4

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&Arrow>;
            key-positions = <27 28>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };
    };

    macros {
        Arrow: Arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "ARROW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                      &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &mo 3
&kp TAB         &kp Q   &kp W   &kp E   &kp R   &kp T                                       &kp Y      &kp U   &kp I      &kp O    &kp P     &kp LS(LC(LG(SEMICOLON)))
&sl 1           &kp A   &kp S   &kp D   &kp F   &kp G                                       &kp H      &kp J   &kp K      &kp L    &kp SEMI  &sl 1
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C   &kp V   &kp B      &kp DELETE    &kp BACKSPACE      &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                        &none   &none   &mo 2   &kp SPACE  &sk LCTRL     &sk RIGHT_COMMAND  &kp ENTER  &mo 2   &none      &none
            >;
        };

        special_keys {
            display-name = "special_keys";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans       &kp LS(LC(LA(NUMBER_1)))  &kp LA(LC(LS(NUMBER_2)))  &kp LS(LA(LC(NUMBER_3)))  &kp LS(LC(LG(NUMBER_4)))  &kp LS(LG(F5))                               &kp K_MUTE             &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp LS(LA(LC(N9)))  &kp LS(LA(LC(N0)))  &trans
&kp PAGE_UP  &kp LS(BACKSLASH)         &kp LEFT_BRACKET          &kp LS(N9)                &kp LS(LEFT_BRACKET)      &kp LS(LC(LG(SEMICOLON)))                    &kp LS(RIGHT_BRACKET)  &kp LS(EQUAL)    &kp LS(GRAVE)      &kp LS(N0)          &kp LS(N5)          &kp PAGE_DOWN
&trans       &kp LS(APOS)              &kp NON_US_BACKSLASH      &kp LS(NUMBER_4)          &kp LS(NUMBER_2)          &kp LS(MINUS)                                &kp LEFT               &kp DOWN         &kp UP_ARROW       &kp RIGHT_ARROW     &kp EQUAL           &trans
&kp HOME     &kp LS(N7)                &kp NON_US_HASH           &kp LS(NUMBER_1)          &kp APOS                  &trans                     &trans    &trans  &kp RIGHT_BRACKET      &kp MINUS        &kp LS(NUMBER_6)   &kp LS(N8)          &kp GRAVE           &kp END
                                       &trans                    &trans                    &trans                    &trans                     &trans    &trans  &trans                 &trans           &trans             &trans
            >;
        };

        alternate {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            display-name = "alternate";
            bindings = <
&none  &none  &none  &none  &none  &none                   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &trans                  &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                   &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none   &none    &none  &none  &none  &none  &none  &none  &none
              &none  &none  &none  &none   &none    &none  &none  &none  &none  &none
            >;
        };

        applications {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &studio_unlock                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans          &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
